!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(window,(function(){return function(e){function t(t){for(var n,c,a=t[0],s=t[1],l=t[2],u=0,j=[];u<a.length;u++)c=a[u],Object.prototype.hasOwnProperty.call(o,c)&&o[c]&&j.push(o[c][0]),o[c]=0;for(n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n]);for(d&&d(t);j.length;)j.shift()();return i.push.apply(i,l||[]),r()}function r(){for(var e,t=0;t<i.length;t++){for(var r=i[t],n=!0,a=1;a<r.length;a++){var s=r[a];0!==o[s]&&(n=!1)}n&&(i.splice(t--,1),e=c(c.s=r[0]))}return e}var n={},o={0:0},i=[];function c(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,c),r.l=!0,r.exports}c.m=e,c.c=n,c.d=function(e,t,r){c.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},c.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,t){if(1&t&&(e=c(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(c.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)c.d(r,n,function(t){return e[t]}.bind(null,n));return r},c.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(t,"a",t),t},c.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},c.p="/";var a=window.webpackJsonp=window.webpackJsonp||[],s=a.push.bind(a);a.push=t,a=a.slice();for(var l=0;l<a.length;l++)t(a[l]);var d=s;return i.push([122,1]),r()}({121:function(e,t,r){},122:function(e,t,r){"use strict";r.r(t);var n=r(4),o=r(0),i=r.n(o),c=r(12),a=r.n(c),s=r(37),l=r(13),d="/",u="/movie-detail",j=r(184),p=Object(o.createContext)({loading:!1,showLoader:function(){},hideLoader:function(){}}),v=r(73),b=r.n(v);function f(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function O(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?f(Object(r),!0).forEach((function(t){b()(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var h="LOGIN",x="LOGOUT",g="USER",m=function(e,t){switch(t.type){case h:return console.log(t),O(O({},e),{},{user:t.value,isLogged:!0});case x:return O(O({},e),{},{user:"",isLogged:!1});default:return e}},y=JSON.parse(localStorage.getItem(g))||{user:"",isLogged:!1},w=Object(o.createContext)(),C=r(172),S=r(173),P=r(174),L=r(81),N=r(186),k=r(188),T=r(124),F=r(177),A=r(178),D=r(189),E=r(86),I=r(175),B=r(176),M=r(182),_=r(165),J=r(169),z=r(171),U=function(){return(U=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var G=function(e){var t=e.textButton,r=e.openDialog,i=void 0!==r&&r,c=e.showActionButtons,a=e.children,s=e.btnCancelText,l=e.btnAcceptText,d=e.onAcceptClick,u=Object(o.useState)(!1),j=u[0],p=u[1];Object(o.useEffect)((function(){p(i)}),[i]);var v=function(){p(!1)};return Object(n.jsxs)(n.Fragment,{children:[Object(n.jsx)(_.a,U({variant:"text",color:"inherit",onClick:function(){p(!0)}},{children:t}),void 0),Object(n.jsxs)(J.a,U({open:j,onClose:v,"aria-labelledby":"form-dialog-title"},{children:[a,c&&Object(n.jsxs)(z.a,{children:[Object(n.jsx)(_.a,U({onClick:v,color:"primary"},{children:s}),void 0),Object(n.jsx)(_.a,U({onClick:d||v,color:"primary"},{children:l}),void 0)]},void 0)]}),void 0)]},void 0)},R=r(51),W=r.n(R),q="/api/login",V="/api/getmovies",Z=r(185),$=function(){return($=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},H=["Blackwidow","Jumanji","Onward","Avengers","Spiderman","Batman"];var K=function(){var e=Object(o.useContext)(w),t=e.state,r=e.dispatch,i=e.searchText,c=Object(o.useContext)(p),a=c.showLoader,s=c.hideLoader,u=Object(l.f)(),j=Object(o.useState)(null),v=j[0],b=j[1],f=Object(o.useState)({user:"",password:""}),O=f[0],m=f[1],y=Object(o.useState)({}),_=y[0],J=y[1],z=Object(o.useState)(!1),U=z[0],R=z[1],V=function(e){var t;m($($({},O),((t={})[e.target.id]=e.target.value,t)))},K=function(){var e=!0,t={};return O.user||(e=!1,t.user="Cannot be empty"),void 0!==O.user&&(O.user.match(/^[a-z]+$/)||(e=!1,t.user="Only lowercase letters")),void 0!==O.password&&(O.password.match(/(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{5,}/)||(e=!1,t.password="Must contain at least one number and one uppercase and lowercase letter, and at least 5 or more characters")),J($({},t)),e},Q=function(e){i.setSearch(e.target.value)};return Object(n.jsx)("header",{children:Object(n.jsx)("div",$({className:"header-root"},{children:Object(n.jsx)(C.a,$({position:"static"},{children:Object(n.jsxs)(S.a,$({className:"container"},{children:[Object(n.jsx)(P.a,$({edge:"start",color:"inherit",onClick:function(){u.push(d)}},{children:Object(n.jsx)(I.a,{},void 0)}),void 0),t.isLogged?Object(n.jsxs)(n.Fragment,{children:[Object(n.jsx)(P.a,$({edge:"start",className:"user-icon",color:"inherit",onClick:function(e){b(e.currentTarget)}},{children:Object(n.jsx)(B.a,{},void 0)}),void 0),Object(n.jsxs)(L.a,$({id:"simple-menu",anchorEl:v,keepMounted:!0,open:Boolean(v),onClose:function(){b(null)}},{children:[Object(n.jsx)(N.a,$({mdUp:!0},{children:Object(n.jsx)(k.a,{children:t.user},void 0)}),void 0),Object(n.jsx)(k.a,$({onClick:function(){localStorage.removeItem(g),r({type:x}),b(null)}},{children:"Logout"}),void 0)]}),void 0),Object(n.jsx)(T.a,$({className:"title",variant:"h6",noWrap:!0},{children:t.user}),void 0)]},void 0):Object(n.jsx)("div",$({className:"login-button"},{children:Object(n.jsxs)(G,$({textButton:"Login",openDialog:U,showActionButtons:!0,btnCancelText:"Cancel",btnAcceptText:"Login",onAcceptClick:function(){var e;K()&&(R(!1),a(),(e=$({},O),W.a.post(q,e)).then((function(e){var t=e.data;localStorage.setItem(g,JSON.stringify(t)),r({type:h,value:t.user})})).catch((function(e){console.log(e)})).finally((function(){R(!1),s()})))}},{children:[Object(n.jsx)(F.a,$({id:"form-dialog-title"},{children:"Login"}),void 0),Object(n.jsx)(A.a,{children:Object(n.jsxs)("form",$({autoComplete:"off"},{children:[Object(n.jsx)(D.a,{autoFocus:!0,margin:"dense",id:"user",label:"User",type:"text",fullWidth:!0,required:!0,error:!!_.user,helperText:_.user||"",onChange:V},void 0),Object(n.jsx)(D.a,{margin:"dense",id:"password",label:"Password",type:"password",fullWidth:!0,required:!0,error:!!_.password,helperText:_.password||"",onChange:V},void 0)]}),void 0)},void 0)]}),void 0)}),void 0),Object(n.jsxs)("div",$({className:"search"},{children:[Object(n.jsx)("div",$({className:"search-icon"},{children:Object(n.jsx)(M.a,{},void 0)}),void 0),Object(n.jsx)(Z.a,{freeSolo:!0,options:H.map((function(e){return e})),renderInput:function(e){return Object(n.jsx)(E.a,{ref:e.InputProps.ref,placeholder:"Searchâ€¦",classes:{root:"input-root",input:"input-input"},onChange:Q,inputProps:$($({},e.inputProps),{"aria-label":"search"})},void 0)}},void 0)]}),void 0)]}),void 0)}),void 0)}),void 0)},void 0)},Q=r(123),X=function(){return(X=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var Y=function(e){var t=e.children,r=Object(o.useContext)(p).loading,c=i.a.createRef();return Object(n.jsxs)(n.Fragment,{children:[Object(n.jsx)(K,{},void 0),Object(n.jsxs)("div",X({className:"container"},{children:[r&&Object(n.jsx)(Q.a,X({ref:c,style:{zIndex:1},open:r},{children:Object(n.jsx)(j.a,{color:"primary",size:70},void 0)}),void 0),t]}),void 0)]},void 0)},ee=function(){return(ee=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var te=function(){var e=Object(l.g)(),t=Object(o.useState)(null),r=t[0],i=t[1];return Object(o.useEffect)((function(){null!=e.state&&i(e.state)}),[e]),Object(n.jsx)(Y,{children:Object(n.jsxs)("div",ee({className:"moviedetail-wrapper m-5"},{children:[Object(n.jsx)("div",{children:Object(n.jsx)("img",{src:null==r?void 0:r.image,className:"img-fluid img-thumbnail",alt:null==r?void 0:r.name},void 0)},void 0),Object(n.jsxs)("div",{children:[Object(n.jsx)("h1",{children:null==r?void 0:r.name},void 0),Object(n.jsx)("article",{children:null==r?void 0:r.description},void 0)]},void 0)]}),void 0)},void 0)},re=r.p+"static/media/images/black-widow.151abba1.jpg",ne=r(192),oe=function(){return(oe=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},ie=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)t.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(e,n[o])&&(r[n[o]]=e[n[o]])}return r};var ce=function(e){var t=e.name,r=void 0===t?"":t,i=e.sortDescription,c=void 0===i?"":i,a=e.rating,s=void 0===a?0:a,d=ie(e,["name","sortDescription","rating"]),j=Object(o.useContext)(w).state,p=Object(l.f)();return Object(n.jsx)("div",oe({className:"moviecard-wrapper"},{children:Object(n.jsxs)("div",oe({className:"moviecard",onClick:function(){p.push({pathname:u,state:oe({image:re,name:r,sortDescription:c,rating:s},d)})}},{children:[Object(n.jsx)("div",oe({className:"text-center"},{children:Object(n.jsx)(ne.a,{name:"read-only",value:s,readOnly:!j.isLogged},void 0)}),void 0),Object(n.jsx)("img",{src:re,className:"img-fluid img-thumbnail",alt:r},void 0),Object(n.jsxs)("div",oe({className:"card-body"},{children:[Object(n.jsx)("h4",{children:r},void 0),Object(n.jsx)("p",oe({className:"card-text"},{children:c}),void 0)]}),void 0)]}),void 0)}),void 0)},ae=r(181),se=r(191),le=r(187),de=function(){return(de=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},ue=["Superheros","childish","cartoons"],je=["Action","Adventure","Comedy"];var pe=function(){var e=Object(o.useContext)(p),t=e.showLoader,r=e.hideLoader,i=Object(o.useContext)(w).searchText,c=Object(o.useState)(null),a=c[0],s=c[1],l=Object(o.useState)({genreFilter:"",typeFilter:""}),d=l[0],u=l[1];Object(o.useEffect)((function(){null==a&&(t(),W.a.post(V,{}).then((function(e){var t=e.data;r(),s(t)})).catch((function(e){return r()})))}),[]);var j=function(e){var t;u(de(de({},d),((t={})[e.target.id]=e.target.value,t)))};return Object(n.jsxs)(Y,{children:[Object(n.jsxs)("div",de({className:"selects-wrapper"},{children:[Object(n.jsxs)(ae.a,de({className:"mr-5"},{children:[Object(n.jsx)(se.a,de({htmlFor:"grouped-native-select"},{children:"Type"}),void 0),Object(n.jsxs)(le.a,de({native:!0,defaultValue:"",onChange:j,id:"typeFilter"},{children:[Object(n.jsx)("option",{"aria-label":"None",value:""},void 0),ue.map((function(e,t){return Object(n.jsx)("option",de({value:e},{children:e}),t)}))]}),void 0)]}),void 0),Object(n.jsxs)(ae.a,de({className:"mr-5"},{children:[Object(n.jsx)(se.a,de({htmlFor:"grouped-native-select"},{children:"Genre"}),void 0),Object(n.jsxs)(le.a,de({native:!0,defaultValue:"",onChange:j,id:"genreFilter"},{children:[Object(n.jsx)("option",{"aria-label":"None",value:""},void 0),je.map((function(e,t){return Object(n.jsx)("option",de({value:e},{children:e}),t)}))]}),void 0)]}),void 0)]}),void 0),Object(n.jsx)("div",de({className:"movies-wrapper"},{children:a&&a.filter((function(e){var t=e.name,r=e.genre,n=e.type;return t.toLowerCase().includes(i.textSearch.toLowerCase())&&(null==r?void 0:r.toLowerCase().includes(d.genreFilter.toLowerCase()))&&(null==n?void 0:n.toLowerCase().includes(d.typeFilter.toLowerCase()))})).map((function(e,t){return Object(n.jsx)(ce,de({},e),t)}))}),void 0)]},void 0)},ve=function(){return(ve=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},be=function(){return Object(n.jsx)(o.Suspense,ve({fallback:Object(n.jsx)(j.a,{},void 0)},{children:Object(n.jsxs)(l.c,{children:[Object(n.jsx)(l.a,{exact:!0,path:d,component:pe},void 0),Object(n.jsx)(l.a,{exact:!0,path:u,component:te},void 0)]},void 0)}),void 0)},fe=(r(121),function(){var e=Object(o.useState)(""),t=e[0],r=e[1];return{textSearch:t,setSearch:i.a.useCallback((function(e){r(e)}),[])}}),Oe=function(){return(Oe=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function he(e){var t=e.children,r=Object(o.useReducer)(m,y),i=r[0],c=r[1],a=fe();return Object(n.jsx)(w.Provider,Oe({value:{state:i,dispatch:c,searchText:a}},{children:t}),void 0)}var xe=function(){var e=Object(o.useState)(!1),t=e[0],r=e[1];return{loading:t,showLoader:i.a.useCallback((function(){r(!0)}),[]),hideLoader:i.a.useCallback((function(){r(!1)}),[])}},ge=function(){return(ge=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function me(e){var t=e.children,r=xe();return Object(n.jsx)(p.Provider,ge({value:r},{children:t}),void 0)}var ye=function(){return Object(n.jsx)(he,{children:Object(n.jsx)(me,{children:Object(n.jsx)(s.a,{children:Object(n.jsx)(be,{},void 0)},void 0)},void 0)},void 0)};a.a.render(Object(n.jsx)(i.a.StrictMode,{children:Object(n.jsx)(ye,{},void 0)},void 0),document.getElementById("root"))}})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,