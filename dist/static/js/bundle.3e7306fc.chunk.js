!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(window,(function(){return function(e){function t(t){for(var n,i,c=t[0],s=t[1],l=t[2],d=0,j=[];d<c.length;d++)i=c[d],Object.prototype.hasOwnProperty.call(o,i)&&o[i]&&j.push(o[i][0]),o[i]=0;for(n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n]);for(u&&u(t);j.length;)j.shift()();return a.push.apply(a,l||[]),r()}function r(){for(var e,t=0;t<a.length;t++){for(var r=a[t],n=!0,c=1;c<r.length;c++){var s=r[c];0!==o[s]&&(n=!1)}n&&(a.splice(t--,1),e=i(i.s=r[0]))}return e}var n={},o={0:0},a=[];function i(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=n,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(r,n,function(t){return e[t]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/";var c=window.webpackJsonp=window.webpackJsonp||[],s=c.push.bind(c);c.push=t,c=c.slice();for(var l=0;l<c.length;l++)t(c[l]);var u=s;return a.push([122,1]),r()}({121:function(e,t,r){},122:function(e,t,r){"use strict";r.r(t);var n=r(3),o=r(0),a=r.n(o),i=r(11),c=r.n(i),s=r(36),l=r(13),u="/",d="/movie-detail",j=r(181),p=Object(o.createContext)(),v=r(72),b=r.n(v);function f(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function O(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?f(Object(r),!0).forEach((function(t){b()(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var h="LOGIN",g="LOGOUT",x="USER",m=function(e,t){switch(t.type){case h:return O(O({},e),{},{user:t.value,isLogged:!0});case g:return O(O({},e),{},{user:"",isLogged:!1});default:return e}},y=JSON.parse(localStorage.getItem(x))||{user:"",isLogged:!1},w=Object(o.createContext)(),C=r(169),S=r(170),P=r(171),N=r(80),L=r(188),k=r(124),T=r(174),F=r(175),M=r(189),E=r(85),D=r(172),A=r(173),I=r(179),B=r(162),_=r(166),J=r(168),R=function(){return(R=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var z=function(e){var t=e.textButton,r=e.openDialog,a=void 0!==r&&r,i=e.showActionButtons,c=e.children,s=e.btnCancelText,l=e.btnAcceptText,u=e.onAcceptClick,d=e.onOpenDialogChange,j=void 0===d?function(){return null}:d,p=Object(o.useState)(!1),v=p[0],b=p[1];Object(o.useEffect)((function(){b(a)}),[a]);var f=function(){j(!1),b(!1)};return Object(n.jsxs)(n.Fragment,{children:[Object(n.jsx)(B.a,R({variant:"text",color:"inherit",onClick:function(){b(!0),j(!0)}},{children:t}),void 0),Object(n.jsxs)(_.a,R({open:v,onClose:f,"aria-labelledby":"form-dialog-title"},{children:[c,i&&Object(n.jsxs)(J.a,{children:[Object(n.jsx)(B.a,R({onClick:f,color:"primary"},{children:s}),void 0),Object(n.jsx)(B.a,R({onClick:u||f,color:"primary"},{children:l}),void 0)]},void 0)]}),void 0)]},void 0)},q=r(51),G=r.n(q),U="/api/login",W="/api/getmovies",V=r(186),Z=function(){return(Z=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},$=["Blackwidow","Jumanji","Onward","Avengers","Spiderman","Batman"];var H=function(){var e=Object(o.useContext)(w),t=e.state,r=e.dispatch,a=e.searchText,i=Object(o.useContext)(p),c=i.showMessage,s=i.showLoader,d=i.hideLoader,j=Object(l.f)(),v=Object(o.useState)(null),b=v[0],f=v[1],O=Object(o.useState)({user:"",password:""}),m=O[0],y=O[1],B=Object(o.useState)({}),_=B[0],J=B[1],R=Object(o.useState)(!1),q=R[0],W=R[1],H=function(e){var t;y(Z(Z({},m),((t={})[e.target.id]=e.target.value,t)))},K=function(){var e=!0,t={};return m.user||(e=!1,t.user="Cannot be empty"),void 0!==m.user&&(m.user.match(/^[a-z]+$/)||(e=!1,t.user="Only lowercase letters")),void 0!==m.password&&(m.password.match(/(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{5,}/)||(e=!1,t.password="Must contain at least one number and one uppercase and lowercase letter, and at least 5 or more characters")),J(Z({},t)),e},Q=function(e){a.setSearch(e.target.value)};return Object(n.jsx)("header",{children:Object(n.jsx)("div",Z({className:"header-root"},{children:Object(n.jsx)(C.a,Z({position:"static"},{children:Object(n.jsxs)(S.a,Z({className:"container"},{children:[Object(n.jsx)(P.a,Z({edge:"start",color:"inherit",onClick:function(){j.push(u)}},{children:Object(n.jsx)(D.a,{},void 0)}),void 0),t.isLogged?Object(n.jsxs)(n.Fragment,{children:[Object(n.jsx)(P.a,Z({edge:"start",className:"user-icon",color:"inherit",onClick:function(e){f(e.currentTarget)}},{children:Object(n.jsx)(A.a,{},void 0)}),void 0),Object(n.jsxs)(N.a,Z({id:"simple-menu",anchorEl:b,keepMounted:!0,open:Boolean(b),onClose:function(){f(null)}},{children:[Object(n.jsx)(L.a,{children:t.user},void 0),Object(n.jsx)(L.a,Z({onClick:function(){localStorage.removeItem(x),r({type:g}),f(null)}},{children:"Logout"}),void 0)]}),void 0),Object(n.jsx)(k.a,Z({className:"title",variant:"h6",noWrap:!0},{children:t.user}),void 0)]},void 0):Object(n.jsx)("div",Z({className:"login-button"},{children:Object(n.jsxs)(z,Z({textButton:"Login",openDialog:q,showActionButtons:!0,btnCancelText:"Cancel",btnAcceptText:"Login",onAcceptClick:function(){var e;K()&&(W(!1),s(),(e=Z({},m),G.a.post(U,e)).then((function(e){var t=e.data;localStorage.setItem(x,JSON.stringify(t)),r({type:h,value:t.user})})).catch((function(e){var t=e.response;c("alert",t.data.messageError),console.log(t.data)})).finally((function(){W(!1),d()})))},onOpenDialogChange:function(e){return W(e)}},{children:[Object(n.jsx)(T.a,Z({id:"form-dialog-title"},{children:"Login"}),void 0),Object(n.jsx)(F.a,{children:Object(n.jsxs)("form",Z({autoComplete:"off"},{children:[Object(n.jsx)(M.a,{autoFocus:!0,margin:"dense",id:"user",label:"User",type:"text",fullWidth:!0,required:!0,error:!!_.user,helperText:_.user||"",onChange:H},void 0),Object(n.jsx)(M.a,{margin:"dense",id:"password",label:"Password",type:"password",fullWidth:!0,required:!0,error:!!_.password,helperText:_.password||"",onChange:H},void 0)]}),void 0)},void 0)]}),void 0)}),void 0),Object(n.jsxs)("div",Z({className:"search"},{children:[Object(n.jsx)("div",Z({className:"search-icon"},{children:Object(n.jsx)(I.a,{},void 0)}),void 0),Object(n.jsx)(V.a,{freeSolo:!0,options:$.map((function(e){return e})),renderInput:function(e){return Object(n.jsx)(E.a,{ref:e.InputProps.ref,placeholder:"Searchâ€¦",classes:{root:"input-root",input:"input-input"},onChange:Q,inputProps:Z(Z({},e.inputProps),{"aria-label":"search"})},void 0)}},void 0)]}),void 0)]}),void 0)}),void 0)}),void 0)},void 0)},K=r(123),Q=function(){return(Q=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var X=function(){var e=Object(o.useContext)(p).loading,t=a.a.useRef(null),r=a.a.useRef(null);return Object(n.jsx)(n.Fragment,{children:Object(n.jsx)(K.a,Q({ref:t,style:{zIndex:1},open:e},{children:Object(n.jsx)(j.a,{ref:r,color:"primary",size:70},void 0)}),void 0)},void 0)},Y=function(){return(Y=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var ee=function(){var e=Object(o.useContext)(p).message;return Object(n.jsxs)("div",Y({className:"message-wrapper "+e.type.class},{children:[Object(n.jsx)("div",{children:e.type.icon},void 0),Object(n.jsx)("div",{children:Object(n.jsx)("span",{children:e.message},void 0)},void 0)]}),void 0)},te=function(){return(te=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var re=function(e){var t=e.children,r=Object(o.useContext)(p).showMessageElement;return Object(n.jsxs)(n.Fragment,{children:[Object(n.jsx)(H,{},void 0),Object(n.jsx)(X,{},void 0),Object(n.jsxs)("div",te({className:"container"},{children:[r&&Object(n.jsx)(ee,{},void 0),t]}),void 0)]},void 0)},ne=function(){return(ne=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var oe=function(){var e=Object(l.g)(),t=Object(o.useState)(null),r=t[0],a=t[1];return Object(o.useEffect)((function(){null!=e.state&&a(e.state)}),[e]),Object(n.jsx)(re,{children:Object(n.jsxs)("div",ne({className:"moviedetail-wrapper m-5"},{children:[Object(n.jsx)("div",{children:Object(n.jsx)("img",{src:null==r?void 0:r.image,className:"img-fluid img-thumbnail",alt:null==r?void 0:r.name},void 0)},void 0),Object(n.jsxs)("div",{children:[Object(n.jsx)("h1",{children:null==r?void 0:r.name},void 0),Object(n.jsx)("article",{children:null==r?void 0:r.description},void 0)]},void 0)]}),void 0)},void 0)},ae=r.p+"static/media/images/black-widow.151abba1.jpg",ie=r(192),ce=function(){return(ce=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},se=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)t.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(e,n[o])&&(r[n[o]]=e[n[o]])}return r};var le=function(e){var t=e.name,r=void 0===t?"":t,a=e.sortDescription,i=void 0===a?"":a,c=e.rating,s=void 0===c?0:c,u=se(e,["name","sortDescription","rating"]),j=Object(o.useContext)(w).state,p=Object(l.f)(),v=function(){p.push({pathname:d,state:ce({image:ae,name:r,sortDescription:i,rating:s},u)})};return Object(n.jsx)("div",ce({className:"moviecard-wrapper"},{children:Object(n.jsxs)("div",ce({className:"moviecard"},{children:[Object(n.jsx)("div",ce({className:"text-center"},{children:Object(n.jsx)(ie.a,{name:"read-only",value:s,readOnly:!j.isLogged},void 0)}),void 0),Object(n.jsx)("img",{onClick:v,src:ae,className:"img-fluid img-thumbnail",alt:r},void 0),Object(n.jsxs)("div",ce({onClick:v,className:"card-body"},{children:[Object(n.jsx)("h4",{children:r},void 0),Object(n.jsx)("p",ce({className:"card-text"},{children:i}),void 0)]}),void 0)]}),void 0)}),void 0)},ue=r(178),de=r(191),je=r(187),pe=function(){return(pe=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},ve=["Superheros","childish","cartoons"],be=["Action","Adventure","Comedy"];var fe=function(){var e=Object(o.useContext)(p),t=e.showMessage,r=e.showLoader,a=e.hideLoader,i=Object(o.useContext)(w).searchText,c=Object(o.useState)(null),s=c[0],l=c[1],u=Object(o.useState)({genreFilter:"",typeFilter:""}),d=u[0],j=u[1];Object(o.useEffect)((function(){null==s&&(r(),G.a.post(W,{}).then((function(e){var r=e.data;r.length>0?l(r):t("info","No movie data found")})).catch((function(e){return t("alert")})).finally((function(){return a()})))}),[]);var v=function(e){var t;j(pe(pe({},d),((t={})[e.target.id]=e.target.value,t)))};return Object(n.jsxs)(re,{children:[Object(n.jsxs)("div",pe({className:"selects-wrapper"},{children:[Object(n.jsxs)(ue.a,pe({className:"mr-5"},{children:[Object(n.jsx)(de.a,pe({htmlFor:"grouped-native-select"},{children:"Type"}),void 0),Object(n.jsxs)(je.a,pe({native:!0,defaultValue:"",onChange:v,id:"typeFilter"},{children:[Object(n.jsx)("option",{"aria-label":"None",value:""},void 0),ve.map((function(e,t){return Object(n.jsx)("option",pe({value:e},{children:e}),t)}))]}),void 0)]}),void 0),Object(n.jsxs)(ue.a,pe({className:"mr-5"},{children:[Object(n.jsx)(de.a,pe({htmlFor:"grouped-native-select"},{children:"Genre"}),void 0),Object(n.jsxs)(je.a,pe({native:!0,defaultValue:"",onChange:v,id:"genreFilter"},{children:[Object(n.jsx)("option",{"aria-label":"None",value:""},void 0),be.map((function(e,t){return Object(n.jsx)("option",pe({value:e},{children:e}),t)}))]}),void 0)]}),void 0)]}),void 0),Object(n.jsx)("div",pe({className:"movies-wrapper"},{children:s&&s.filter((function(e){var t=e.name,r=e.genre,n=e.type;return t.toLowerCase().includes(i.textSearch.toLowerCase())&&(null==r?void 0:r.toLowerCase().includes(d.genreFilter.toLowerCase()))&&(null==n?void 0:n.toLowerCase().includes(d.typeFilter.toLowerCase()))})).map((function(e,t){return Object(n.jsx)(le,pe({},e),t)}))}),void 0)]},void 0)},Oe=function(){return(Oe=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},he=function(){return Object(n.jsx)(o.Suspense,Oe({fallback:Object(n.jsx)(j.a,{},void 0)},{children:Object(n.jsxs)(l.c,{children:[Object(n.jsx)(l.a,{exact:!0,path:u,component:fe},void 0),Object(n.jsx)(l.a,{exact:!0,path:d,component:oe},void 0)]},void 0)}),void 0)},ge=(r(121),function(){var e=Object(o.useState)(""),t=e[0],r=e[1];return{textSearch:t,setSearch:a.a.useCallback((function(e){r(e)}),[])}}),xe=function(){return(xe=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function me(e){var t=e.children,r=Object(o.useReducer)(m,y),a=r[0],i=r[1],c=ge();return Object(n.jsx)(w.Provider,xe({value:{state:a,dispatch:i,searchText:c}},{children:t}),void 0)}var ye=function(){var e=Object(o.useState)(!1),t=e[0],r=e[1];return{loading:t,showLoader:a.a.useCallback((function(){r(!0)}),[]),hideLoader:a.a.useCallback((function(){r(!1)}),[])}},we=r(182),Ce=r(183),Se=r(184),Pe=r(185),Ne=function(){return(Ne=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},Le={type:{class:"",icon:Object(n.jsx)(n.Fragment,{},void 0)},message:""},ke=function(){var e=Object(o.useState)(!1),t=e[0],r=e[1],i=Object(o.useState)(Le),c=i[0],s=i[1],l=function(e){switch(e.toLowerCase()){case"info":return{class:"info",icon:Object(n.jsx)(we.a,{},void 0)};case"alert":return{class:"alert",icon:Object(n.jsx)(Ce.a,{},void 0)};case"warning":return{class:"warning",icon:Object(n.jsx)(Se.a,{},void 0)};case"success":return{class:"success",icon:Object(n.jsx)(Pe.a,{},void 0)};default:return{class:"alert",icon:Object(n.jsx)(Ce.a,{},void 0)}}},u=a.a.useCallback((function(e,t){s({type:Ne({},l(e)),message:t||"Request failed, try again or contact the administrator."}),r(!0),setTimeout((function(){d()}),5e3)}),[]),d=a.a.useCallback((function(){s(Le),r(!1)}),[]);return{showMessageElement:t,message:c,showMessage:u,hideMessage:d}},Te=function(){return(Te=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function Fe(e){var t=e.children,r=ye(),o=ke();return Object(n.jsx)(p.Provider,Te({value:Te(Te({},r),o)},{children:t}),void 0)}var Me=function(){return Object(n.jsx)(me,{children:Object(n.jsx)(Fe,{children:Object(n.jsx)(s.a,{children:Object(n.jsx)(he,{},void 0)},void 0)},void 0)},void 0)};c.a.render(Object(n.jsx)(a.a.StrictMode,{children:Object(n.jsx)(Me,{},void 0)},void 0),document.getElementById("root"))}})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,