!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(window,(function(){return function(e){function t(t){for(var n,c,a=t[0],s=t[1],l=t[2],d=0,j=[];d<a.length;d++)c=a[d],Object.prototype.hasOwnProperty.call(o,c)&&o[c]&&j.push(o[c][0]),o[c]=0;for(n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n]);for(u&&u(t);j.length;)j.shift()();return i.push.apply(i,l||[]),r()}function r(){for(var e,t=0;t<i.length;t++){for(var r=i[t],n=!0,a=1;a<r.length;a++){var s=r[a];0!==o[s]&&(n=!1)}n&&(i.splice(t--,1),e=c(c.s=r[0]))}return e}var n={},o={0:0},i=[];function c(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,c),r.l=!0,r.exports}c.m=e,c.c=n,c.d=function(e,t,r){c.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},c.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,t){if(1&t&&(e=c(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(c.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)c.d(r,n,function(t){return e[t]}.bind(null,n));return r},c.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(t,"a",t),t},c.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},c.p="/";var a=window.webpackJsonp=window.webpackJsonp||[],s=a.push.bind(a);a.push=t,a=a.slice();for(var l=0;l<a.length;l++)t(a[l]);var u=s;return i.push([122,1]),r()}({121:function(e,t,r){},122:function(e,t,r){"use strict";r.r(t);var n=r(4),o=r(0),i=r.n(o),c=r(12),a=r.n(c),s=r(37),l=r(13),u="/",d="/movie-detail",j=r(184),p=r(73),v=r.n(p);function b(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function f(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?b(Object(r),!0).forEach((function(t){v()(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):b(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var O="LOGIN",h="LOGOUT",x="USER",g=function(e,t){switch(t.type){case O:return console.log(t),f(f({},e),{},{user:t.value,isLogged:!0});case h:return f(f({},e),{},{user:"",isLogged:!1});default:return e}},m=JSON.parse(localStorage.getItem(x))||{user:"",isLogged:!1},y=Object(o.createContext)(),w=Object(o.createContext)(),C=r(172),S=r(173),P=r(174),N=r(81),L=r(186),k=r(188),T=r(124),F=r(177),E=r(178),M=r(189),A=r(86),D=r(175),I=r(176),B=r(182),_=r(165),J=r(169),z=r(171),R=function(){return(R=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var U=function(e){var t=e.textButton,r=e.openDialog,i=void 0!==r&&r,c=e.showActionButtons,a=e.children,s=e.btnCancelText,l=e.btnAcceptText,u=e.onAcceptClick,d=Object(o.useState)(!1),j=d[0],p=d[1];Object(o.useEffect)((function(){p(i)}),[i]);var v=function(){p(!1)};return Object(n.jsxs)(n.Fragment,{children:[Object(n.jsx)(_.a,R({variant:"text",color:"inherit",onClick:function(){p(!0)}},{children:t}),void 0),Object(n.jsxs)(J.a,R({open:j,onClose:v,"aria-labelledby":"form-dialog-title"},{children:[a,c&&Object(n.jsxs)(z.a,{children:[Object(n.jsx)(_.a,R({onClick:v,color:"primary"},{children:s}),void 0),Object(n.jsx)(_.a,R({onClick:u||v,color:"primary"},{children:l}),void 0)]},void 0)]}),void 0)]},void 0)},G=r(51),W=r.n(G),q="/api/login",V="/api/getmovies",Z=r(185),$=function(){return($=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},H=["Blackwidow","Jumanji","Onward","Avengers","Spiderman","Batman"];var K=function(){var e=Object(o.useContext)(y),t=e.state,r=e.dispatch,i=e.searchText,c=Object(o.useContext)(w),a=c.showLoader,s=c.hideLoader,d=Object(l.f)(),j=Object(o.useState)(null),p=j[0],v=j[1],b=Object(o.useState)({user:"",password:""}),f=b[0],g=b[1],m=Object(o.useState)({}),_=m[0],J=m[1],z=Object(o.useState)(!1),R=z[0],G=z[1],V=function(e){var t;g($($({},f),((t={})[e.target.id]=e.target.value,t)))},K=function(){var e=!0,t={};return f.user||(e=!1,t.user="Cannot be empty"),void 0!==f.user&&(f.user.match(/^[a-z]+$/)||(e=!1,t.user="Only lowercase letters")),void 0!==f.password&&(f.password.match(/(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{5,}/)||(e=!1,t.password="Must contain at least one number and one uppercase and lowercase letter, and at least 5 or more characters")),J($({},t)),e},Q=function(e){i.setSearch(e.target.value)};return Object(n.jsx)("header",{children:Object(n.jsx)("div",$({className:"header-root"},{children:Object(n.jsx)(C.a,$({position:"static"},{children:Object(n.jsxs)(S.a,$({className:"container"},{children:[Object(n.jsx)(P.a,$({edge:"start",color:"inherit",onClick:function(){d.push(u)}},{children:Object(n.jsx)(D.a,{},void 0)}),void 0),t.isLogged?Object(n.jsxs)(n.Fragment,{children:[Object(n.jsx)(P.a,$({edge:"start",className:"user-icon",color:"inherit",onClick:function(e){v(e.currentTarget)}},{children:Object(n.jsx)(I.a,{},void 0)}),void 0),Object(n.jsxs)(N.a,$({id:"simple-menu",anchorEl:p,keepMounted:!0,open:Boolean(p),onClose:function(){v(null)}},{children:[Object(n.jsx)(L.a,$({mdUp:!0},{children:Object(n.jsx)(k.a,{children:t.user},void 0)}),void 0),Object(n.jsx)(k.a,$({onClick:function(){localStorage.removeItem(x),r({type:h}),v(null)}},{children:"Logout"}),void 0)]}),void 0),Object(n.jsx)(T.a,$({className:"title",variant:"h6",noWrap:!0},{children:t.user}),void 0)]},void 0):Object(n.jsx)("div",$({className:"login-button"},{children:Object(n.jsxs)(U,$({textButton:"Login",openDialog:R,showActionButtons:!0,btnCancelText:"Cancel",btnAcceptText:"Login",onAcceptClick:function(){var e;K()&&(G(!1),a(),(e=$({},f),W.a.post(q,e)).then((function(e){var t=e.data;localStorage.setItem(x,JSON.stringify(t)),r({type:O,value:t.user})})).catch((function(e){console.log(e)})).finally((function(){G(!1),s()})))}},{children:[Object(n.jsx)(F.a,$({id:"form-dialog-title"},{children:"Login"}),void 0),Object(n.jsx)(E.a,{children:Object(n.jsxs)("form",$({autoComplete:"off"},{children:[Object(n.jsx)(M.a,{autoFocus:!0,margin:"dense",id:"user",label:"User",type:"text",fullWidth:!0,required:!0,error:!!_.user,helperText:_.user||"",onChange:V},void 0),Object(n.jsx)(M.a,{margin:"dense",id:"password",label:"Password",type:"password",fullWidth:!0,required:!0,error:!!_.password,helperText:_.password||"",onChange:V},void 0)]}),void 0)},void 0)]}),void 0)}),void 0),Object(n.jsxs)("div",$({className:"search"},{children:[Object(n.jsx)("div",$({className:"search-icon"},{children:Object(n.jsx)(B.a,{},void 0)}),void 0),Object(n.jsx)(Z.a,{freeSolo:!0,options:H.map((function(e){return e})),renderInput:function(e){return Object(n.jsx)(A.a,{ref:e.InputProps.ref,placeholder:"Searchâ€¦",classes:{root:"input-root",input:"input-input"},onChange:Q,inputProps:$($({},e.inputProps),{"aria-label":"search"})},void 0)}},void 0)]}),void 0)]}),void 0)}),void 0)}),void 0)},void 0)},Q=r(123),X=function(){return(X=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var Y=function(){var e=Object(o.useContext)(w).loading,t=i.a.useRef(null),r=i.a.useRef(null);return Object(n.jsx)(n.Fragment,{children:Object(n.jsx)(Q.a,X({ref:t,style:{zIndex:1},open:e},{children:Object(n.jsx)(j.a,{ref:r,color:"primary",size:70},void 0)}),void 0)},void 0)},ee=function(){return(ee=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var te=function(e){var t=e.children;return Object(n.jsxs)(n.Fragment,{children:[Object(n.jsx)(K,{},void 0),Object(n.jsx)(Y,{},void 0),Object(n.jsx)("div",ee({className:"container"},{children:t}),void 0)]},void 0)},re=function(){return(re=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var ne=function(){var e=Object(l.g)(),t=Object(o.useState)(null),r=t[0],i=t[1];return Object(o.useEffect)((function(){null!=e.state&&i(e.state)}),[e]),Object(n.jsx)(te,{children:Object(n.jsxs)("div",re({className:"moviedetail-wrapper m-5"},{children:[Object(n.jsx)("div",{children:Object(n.jsx)("img",{src:null==r?void 0:r.image,className:"img-fluid img-thumbnail",alt:null==r?void 0:r.name},void 0)},void 0),Object(n.jsxs)("div",{children:[Object(n.jsx)("h1",{children:null==r?void 0:r.name},void 0),Object(n.jsx)("article",{children:null==r?void 0:r.description},void 0)]},void 0)]}),void 0)},void 0)},oe=r.p+"static/media/images/black-widow.151abba1.jpg",ie=r(192),ce=function(){return(ce=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},ae=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)t.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(e,n[o])&&(r[n[o]]=e[n[o]])}return r};var se=function(e){var t=e.name,r=void 0===t?"":t,i=e.sortDescription,c=void 0===i?"":i,a=e.rating,s=void 0===a?0:a,u=ae(e,["name","sortDescription","rating"]),j=Object(o.useContext)(y).state,p=Object(l.f)();return Object(n.jsx)("div",ce({className:"moviecard-wrapper"},{children:Object(n.jsxs)("div",ce({className:"moviecard",onClick:function(){p.push({pathname:d,state:ce({image:oe,name:r,sortDescription:c,rating:s},u)})}},{children:[Object(n.jsx)("div",ce({className:"text-center"},{children:Object(n.jsx)(ie.a,{name:"read-only",value:s,readOnly:!j.isLogged},void 0)}),void 0),Object(n.jsx)("img",{src:oe,className:"img-fluid img-thumbnail",alt:r},void 0),Object(n.jsxs)("div",ce({className:"card-body"},{children:[Object(n.jsx)("h4",{children:r},void 0),Object(n.jsx)("p",ce({className:"card-text"},{children:c}),void 0)]}),void 0)]}),void 0)}),void 0)},le=r(181),ue=r(191),de=r(187),je=function(){return(je=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},pe=["Superheros","childish","cartoons"],ve=["Action","Adventure","Comedy"];var be=function(){var e=Object(o.useContext)(w),t=e.showLoader,r=e.hideLoader,i=Object(o.useContext)(y).searchText,c=Object(o.useState)(null),a=c[0],s=c[1],l=Object(o.useState)({genreFilter:"",typeFilter:""}),u=l[0],d=l[1];Object(o.useEffect)((function(){null==a&&(t(),W.a.post(V,{}).then((function(e){var t=e.data;r(),s(t)})).catch((function(e){return r()})))}),[]);var j=function(e){var t;d(je(je({},u),((t={})[e.target.id]=e.target.value,t)))};return Object(n.jsxs)(te,{children:[Object(n.jsxs)("div",je({className:"selects-wrapper"},{children:[Object(n.jsxs)(le.a,je({className:"mr-5"},{children:[Object(n.jsx)(ue.a,je({htmlFor:"grouped-native-select"},{children:"Type"}),void 0),Object(n.jsxs)(de.a,je({native:!0,defaultValue:"",onChange:j,id:"typeFilter"},{children:[Object(n.jsx)("option",{"aria-label":"None",value:""},void 0),pe.map((function(e,t){return Object(n.jsx)("option",je({value:e},{children:e}),t)}))]}),void 0)]}),void 0),Object(n.jsxs)(le.a,je({className:"mr-5"},{children:[Object(n.jsx)(ue.a,je({htmlFor:"grouped-native-select"},{children:"Genre"}),void 0),Object(n.jsxs)(de.a,je({native:!0,defaultValue:"",onChange:j,id:"genreFilter"},{children:[Object(n.jsx)("option",{"aria-label":"None",value:""},void 0),ve.map((function(e,t){return Object(n.jsx)("option",je({value:e},{children:e}),t)}))]}),void 0)]}),void 0)]}),void 0),Object(n.jsx)("div",je({className:"movies-wrapper"},{children:a&&a.filter((function(e){var t=e.name,r=e.genre,n=e.type;return t.toLowerCase().includes(i.textSearch.toLowerCase())&&(null==r?void 0:r.toLowerCase().includes(u.genreFilter.toLowerCase()))&&(null==n?void 0:n.toLowerCase().includes(u.typeFilter.toLowerCase()))})).map((function(e,t){return Object(n.jsx)(se,je({},e),t)}))}),void 0)]},void 0)},fe=function(){return(fe=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},Oe=function(){return Object(n.jsx)(o.Suspense,fe({fallback:Object(n.jsx)(j.a,{},void 0)},{children:Object(n.jsxs)(l.c,{children:[Object(n.jsx)(l.a,{exact:!0,path:u,component:be},void 0),Object(n.jsx)(l.a,{exact:!0,path:d,component:ne},void 0)]},void 0)}),void 0)},he=(r(121),function(){var e=Object(o.useState)(""),t=e[0],r=e[1];return{textSearch:t,setSearch:i.a.useCallback((function(e){r(e)}),[])}}),xe=function(){return(xe=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function ge(e){var t=e.children,r=Object(o.useReducer)(g,m),i=r[0],c=r[1],a=he();return Object(n.jsx)(y.Provider,xe({value:{state:i,dispatch:c,searchText:a}},{children:t}),void 0)}var me=function(){var e=Object(o.useState)(!1),t=e[0],r=e[1];return{loading:t,showLoader:i.a.useCallback((function(){r(!0)}),[]),hideLoader:i.a.useCallback((function(){r(!1)}),[])}},ye=function(){var e=Object(o.useState)(!1),t=e[0],r=e[1],n=Object(o.useState)(""),c=n[0],a=n[1];return{showMessage:t,errorMessage:c,showErrorMessage:i.a.useCallback((function(e){a(e),r(!0)}),[]),hideErrorMessage:i.a.useCallback((function(){a(""),r(!1)}),[])}},we=function(){return(we=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function Ce(e){var t=e.children,r=me(),o=ye();return Object(n.jsx)(w.Provider,we({value:we(we({},r),o)},{children:t}),void 0)}var Se=function(){return Object(n.jsx)(ge,{children:Object(n.jsx)(Ce,{children:Object(n.jsx)(s.a,{children:Object(n.jsx)(Oe,{},void 0)},void 0)},void 0)},void 0)};a.a.render(Object(n.jsx)(i.a.StrictMode,{children:Object(n.jsx)(Se,{},void 0)},void 0),document.getElementById("root"))}})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,